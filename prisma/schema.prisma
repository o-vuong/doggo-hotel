// This is your Prisma schema file
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  password     String
  role         Role          @default(PET_OWNER)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  pets         Pet[]
  reservations Reservation[]
}

enum Role {
  SYSTEM_ADMIN
  FACILITY_ADMIN
  MANAGER
  STAFF
  PET_OWNER
}

model Pet {
  id          Int      @id @default(autoincrement())
  name        String
  breed       String?
  age         Int?
  vaccinated  Boolean? 
  ownerId     Int
  owner       User     @relation(fields: [ownerId], references: [id])
  createdAt   DateTime @default(now())
  reservations Reservation[]
}

model Facility {
  id       Int      @id @default(autoincrement())
  name     String
  location String?
  kennels Kennel[]
}

model Kennel {
  id         Int         @id @default(autoincrement())
  label      String
  size       KennelSize
  facilityId Int
  facility   Facility    @relation(fields: [facilityId], references: [id])
}

enum KennelSize {
  SMALL
  MEDIUM
  LARGE
  EXTRA_LARGE
}

model Reservation {
  id        Int                 @id @default(autoincrement())
  status    ReservationStatus   @default(PENDING)
  createdAt DateTime            @default(now())
  updatedAt DateTime            @updatedAt
  petId     Int
  pet       Pet                 @relation(fields: [petId], references: [id])
  userId    Int
  user      User                @relation(fields: [userId], references: [id])
  // Additional reservation details (e.g., startDate, endDate) can be added later
}

enum ReservationStatus {
  PENDING
  CONFIRMED
  CHECKED_IN
  CHECKED_OUT
  CANCELLED
}
